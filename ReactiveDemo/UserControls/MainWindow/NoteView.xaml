<UserControl x:Class="ReactiveDemo.UserControls.MainWindow.NoteView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ReactiveDemo.UserControls.MainWindow"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:controlzex="urn:controlzex"
             xmlns:converters="clr-namespace:InfrastructureDemo.Converters;assembly=InfrastructureDemo"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:interactionRequest="http://www.codeplex.com/prism"
             xmlns:actionBase="clr-namespace:ReactiveDemo.Base.ActionBase;assembly=InfrastructureDemo"
             xmlns:behaviors="clr-namespace:MahApps.Metro.Behaviors;assembly=MahApps.Metro"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:validationrules="clr-namespace:InfrastructureDemo.ValidationRules;assembly=InfrastructureDemo"
             xmlns:helpers="clr-namespace:BaseDemo.Helpers.Component;assembly=BaseDemo"
             xmlns:data="clr-namespace:SharedDemo.GlobalData;assembly=SharedDemo"
             xmlns:actionBase1="clr-namespace:ReactiveDemo.ActionBase;assembly=InfrastructureDemo"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:common="clr-namespace:ReactiveDemo.Common;assembly=InfrastructureDemo"
             mc:Ignorable="d" 
             d:DesignHeight="450"
             d:DesignWidth="800">

    <i:Interaction.Triggers>
        <interactionRequest:InteractionRequestTrigger SourceObject="{Binding AddNoteCategoryRequest}">
            <actionBase:InvokeMethodAction MethodName="AddNoteCategory" />
        </interactionRequest:InteractionRequestTrigger>

        <interactionRequest:InteractionRequestTrigger SourceObject="{Binding ConfigTypeViewRequest}">
            <actionBase1:AlertWindowAction
                WindowName="ReactiveDemo.Views.MainWindow.ConfigNoteTypeView" />
        </interactionRequest:InteractionRequestTrigger>

        <interactionRequest:InteractionRequestTrigger SourceObject="{Binding OpenSearchNoteViewRequest}">
            <actionBase1:AlertWindowAction
                WindowName="ReactiveDemo.Views.MainWindow.SearchNoteView" />
        </interactionRequest:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <UserControl.Resources>
        <ResourceDictionary>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <converters:ReverseBoolToVisibilityConverter x:Key="ReverseBoolToVisibilityConverter" />

            <ContextMenu x:Key="CategoryContextMenu">
                <MenuItem Header="delete"
                          Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1,AncestorType=local:NoteView}, Path=DataContext.DeleteNoteCategoryCommand}"
                          CommandParameter="{Binding}"/>
                <MenuItem Header="edit name"
                          Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1,AncestorType=local:NoteView}, Path=DataContext.EditNoteCategoryNameCommand}"
                          CommandParameter="{Binding}"/>
            </ContextMenu>

            <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0,0,0,0"/>
                <Setter Property="BorderBrush" Value="LightGray"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray4}"/>
                <Setter Property="FontFamily" Value="Meiryo UI"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="Margin" Value="2,0,0,0"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="ContextMenu" Value="{StaticResource CategoryContextMenu}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border x:Name="ItemParentBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Margin="{TemplateBinding Margin}"
                                    Height="{TemplateBinding Height}"
                                    CornerRadius="5,5,0,0">
                                <Border.InputBindings>
                                    <MouseBinding MouseAction="LeftDoubleClick"
                                                  Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1,AncestorType=local:NoteView}, Path=DataContext.EditNoteCategoryNameCommand}"
                                                  CommandParameter="{Binding}"/>
                                </Border.InputBindings>

                                <Grid Margin="5,0,5,0">
                                    <TextBlock x:Name="DisplayTextBlock"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Foreground="{TemplateBinding Foreground}"
                                               FontSize="{TemplateBinding FontSize}"
                                               Text="{Binding CategoryName}"
                                               FontFamily="{TemplateBinding FontFamily}"
                                               Visibility="{Binding IsEdit, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource ReverseBoolToVisibilityConverter}}"/>

                                    <TextBox x:Name="EditTextBox"
                                             VerticalContentAlignment="Center"
                                             FontSize="{TemplateBinding FontSize}"
                                             Visibility="{Binding IsEdit, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                             BorderThickness="1"
                                             mah:ValidationHelper.CloseOnMouseLeftButtonDown="True"
                                             mah:ValidationHelper.ShowValidationErrorOnMouseOver="True"
                                             GotFocus="EditTextBox_GotFocus"
                                             LostFocus="EditTextBox_LostFocus"
                                             IsVisibleChanged="EditTextBox_IsVisibleChanged"
                                             KeyUp="EditTextBox_KeyUp"
                                             Loaded="EditTextBox_Loaded">
                                        <TextBox.Text>
                                            <Binding Path="CategoryName" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <validationrules:NoteCategoryNameValidationRule/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="DisplayTextBlock" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                                    <Setter TargetName="DisplayTextBlock" Property="FontWeight" Value="Bold"/>
                                    <Setter TargetName="DisplayTextBlock" Property="FontSize" Value="20"/>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="DisplayTextBlock" Property="Foreground" Value="Black"/>
                                </MultiTrigger>


                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Note.Type.ListViewItem.Style" TargetType="{x:Type ListViewItem}">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1,1,0,1"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray4}"/>
                <Setter Property="FontFamily" Value="Meiryo UI"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Margin" Value="0,0,0,3"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Width" Value="150"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border x:Name="ItemParentBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    Height="{TemplateBinding Height}"
                                    Width="{TemplateBinding Width}"
                                    CornerRadius="5,0,0,5">
                                <TextBlock x:Name="DisplayTextBlock"
                                           Padding="5,8,0,0"
                                           Height="{TemplateBinding Height}"
                                           Width="{TemplateBinding Width}"
                                           VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                           HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontSize="{TemplateBinding FontSize}"
                                           Text="{Binding TypeName}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           ToolTip="{Binding TypeName}"
                                           TextWrapping="NoWrap"
                                           TextTrimming="CharacterEllipsis"/>

                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="DisplayTextBlock" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                                    <Setter TargetName="DisplayTextBlock" Property="FontWeight" Value="Bold"/>
                                    <Setter TargetName="DisplayTextBlock" Property="FontSize" Value="18"/>
                                    <Setter TargetName="DisplayTextBlock" Property="Padding" Value="5,8,0,0"/>
                                    <Setter TargetName="ItemParentBorder" Property="BorderThickness" Value="2,2,0,2"/>
                                    <Setter TargetName="ItemParentBorder" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="DisplayTextBlock" Property="Foreground" Value="Black"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Note.Type.ListView.Style" TargetType="{x:Type ListView}">
                <Style.Resources>
                    <Style BasedOn="{StaticResource ListViewItemStyle}" TargetType="{x:Type ListViewItem}" />
                </Style.Resources>
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource Note.Type.ListViewItem.Style}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <ScrollViewer Template="{DynamicResource MahApps.Templates.ScrollViewer.AnimatedSingleRow}"
                                          HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical" IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="FontStyle.Checked.Template">
                <Border BorderBrush="Black" BorderThickness="2"/>
            </ControlTemplate>

            <ControlTemplate x:Key="Checkbox.Template" TargetType="CheckBox">
                <Border x:Name="Border"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        BorderBrush="{DynamicResource MahApps.Brushes.Button.Border}"
                        BorderThickness="1">
                    <Label Content="{TemplateBinding Content}"
                           Width="{TemplateBinding Width}"
                           FontSize="{TemplateBinding FontSize}"
                           FontWeight="{TemplateBinding FontWeight}"
                           FontStyle="{TemplateBinding FontStyle}"
                           HorizontalContentAlignment="Center"
                           VerticalContentAlignment="Center"/>
                </Border>

                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="Border" Property="common:AdornerEffect.Template" Value="{StaticResource FontStyle.Checked.Template}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="45"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="160"/>
            <ColumnDefinition Width="*" MaxWidth="1100"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <mah:ProgressRing Grid.Row="0" Grid.Column="0" Grid.RowSpan="4" Grid.ColumnSpan="3"
                          Margin="4"
                          Foreground="{DynamicResource AccentColorBrush}"
                          Panel.ZIndex="1"
                          IsActive="{Binding IsProgress.Value}"
                          Visibility="{Binding IsProgress.Value, Converter={StaticResource BoolToVisibilityConverter}}"/>

        <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"
              VerticalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <TextBlock Margin="10,0,0,0" Grid.Column="0"
                       Text="Font: "
                       FontSize="16"
                       VerticalAlignment="Center"/>

            <!--<mah:ColorPicker Width="220" Height="40"
                             Margin="10,2,0,0"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Center"
                             mah:TextBoxHelper.ClearTextButton="True"
                             mah:TextBoxHelper.UseFloatingWatermark="True"
                             mah:TextBoxHelper.Watermark="Select a color"
                             AddToRecentColorsTrigger="SelectedColorChanged"
                             SelectedColorChanged="ColorPicker_SelectedColorChanged"/>-->
            <Grid Margin="10,2,0,0"  Grid.Column="1">
                <Button Width="40" Height="30" Margin="0,0,0,0"
                        HorizontalAlignment="Left"
                        Background="{Binding ElementName=ColorPiker, Path=SelectedColor, Converter={x:Static mah:ColorToSolidColorBrushConverter.DefaultInstance}}"
                        Panel.ZIndex="1"
                        Click="Button_Click">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                    Background="{TemplateBinding Background}"/>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <mah:ColorPicker x:Name="ColorPiker"
                                 Width="64" Height="30"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 AddToRecentColorsTrigger="SelectedColorChanged"
                                 SelectedColorChanged="ColorPicker_SelectedColorChanged">
                    <mah:ColorPicker.SelectedColorTemplate>
                        <DataTemplate>
                            <Grid x:Name="RootGrid" Width="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                    <Setter TargetName="RootGrid" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </mah:ColorPicker.SelectedColorTemplate>
                </mah:ColorPicker>
            </Grid>

            <TextBlock Margin="10,0,0,0" Grid.Column="2"
                       Text="Background: "
                       FontSize="16"
                       VerticalAlignment="Center"/>

            <Grid Margin="10,2,0,0"  Grid.Column="3">
                <Button Width="40" Height="30" Margin="0,0,0,0"
                        HorizontalAlignment="Left"
                        Background="{Binding ElementName=BackgroundColorPiker, Path=SelectedColor, Converter={x:Static mah:ColorToSolidColorBrushConverter.DefaultInstance}}"
                        Panel.ZIndex="1"
                        Click="BackgroundColorButton_Click">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                    Background="{TemplateBinding Background}"/>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <mah:ColorPicker x:Name="BackgroundColorPiker"
                                 Width="64" Height="30"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 AddToRecentColorsTrigger="SelectedColorChanged"
                                 SelectedColorChanged="BackgroundColorPicker_SelectedColorChanged">
                    <mah:ColorPicker.SelectedColorTemplate>
                        <DataTemplate>
                            <Grid x:Name="RootGrid" Width="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                    <Setter TargetName="RootGrid" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </mah:ColorPicker.SelectedColorTemplate>
                </mah:ColorPicker>
            </Grid>

            <TextBlock Margin="10,0,0,0"  Grid.Column="4"
                       Text="Font Size: "
                       FontSize="16"
                       VerticalAlignment="Center"/>

            <Grid Margin="10,1,0,0" Grid.Column="5">
                <Button x:Name="FontSizeButton"
                        Width="40" Height="40" Margin="0,0,0,0"
                        HorizontalAlignment="Left"
                        Panel.ZIndex="1"
                        Click="FontSizeButton_Click">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border BorderThickness="1" BorderBrush="{DynamicResource MahApps.Brushes.Control.Border}">
                                <TextBlock Margin="4,5,0,0"
                                           FontSize="{Binding ElementName=FontSizeComboBox, Path=SelectedItem.Content}"/>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <ComboBox x:Name="FontSizeComboBox"
                          Width="62" Height="40"
                          FontSize="{Binding RelativeSource={RelativeSource Mode=Self}, Path=SelectedItem.Content}"
                          VerticalAlignment="Center"
                          SelectionChanged="ComboBox_SelectionChanged">
                    <ComboBoxItem Content="12" FontSize="12"/>
                    <ComboBoxItem Content="14" FontSize="14"/>
                    <ComboBoxItem Content="16" FontSize="16"/>
                    <ComboBoxItem Content="18" FontSize="18"/>
                    <ComboBoxItem Content="20" FontSize="20"/>
                    <ComboBoxItem Content="22" FontSize="22"/>
                </ComboBox>
            </Grid>

            <CheckBox x:Name="BoldCheckBox" Grid.Column="6"
                      Margin="10,0,0,0"
                      Width="40"
                      Height="40"
                      FontSize="22"
                      FontWeight="Bold"
                      Content="B"
                      Checked="BoldCheckBox_Checked"
                      Unchecked="BoldCheckBox_Unchecked"
                      Template="{StaticResource Checkbox.Template}"/>


            <CheckBox x:Name="ItelicCheckBox" Grid.Column="7"
                      Margin="10,0,0,0"
                      Width="40"
                      Height="40"
                      FontSize="22"
                      FontStyle="Italic"
                      Content="I"
                      Checked="ItelicCheckBox_Checked"
                      Unchecked="ItelicCheckBox_Unchecked"
                      Template="{StaticResource Checkbox.Template}"/>


            <!--<Button x:Name="UnderlineButton"
                    Margin="10,0,0,0"
                    Padding="0"
                    Width="40"
                    FontSize="21"
                    FontWeight="Normal"
                    Click="UnderlineButton_Click">
                <TextBlock TextDecorations="Underline" Text="U"/>
            </Button>-->

            <Grid Margin="0,0,0,0" HorizontalAlignment="Right"  Grid.Column="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBox Grid.Column="0" Margin="10,0,10,0"
                         Height="40"
                         Width="200"
                         x:Name="QuickSearch"
                         FontSize="18"
                         VerticalContentAlignment="Center"
                         Text="{Binding QuickSearchKeyWord.Value, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Return" Command="{Binding QuickSearchCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>

                <Button Grid.Column="1"
                        x:Name="QuickSearchButton"
                        Width="80"
                        Height="40"
                        Margin="0,0,100,0"
                        HorizontalAlignment="Right"
                        FontSize="16"
                        Content="Search"
                        Command="{Binding QuickSearchCommand}"/>
            </Grid>
            
        </Grid>

        <TabControl x:Name="NoteCategoryTabControl"
                    Grid.Row="1" Grid.Column="1" Grid.RowSpan="2"
                    Style="{DynamicResource MahApps.Styles.TabControl}"
                    ItemsSource="{Binding SelectedNoteType.Value.CategoryList}"
                    SelectedItem="{Binding SelectedNoteCategory.Value}"
                    SelectionChanged="NoteCategoryTabControl_SelectionChanged"
                    dd:DragDrop.IsDragSource="True"
                    dd:DragDrop.IsDropTarget="True"
                    dd:DragDrop.DropHandler="{Binding}">
            <TabControl.ItemContainerStyle>
                <Style TargetType="TabItem" BasedOn="{StaticResource MahApps.Styles.TabItem}">
                    <Setter Property="ContextMenu" Value="{StaticResource CategoryContextMenu}"/>
                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray4}"/>
                    <Setter Property="FontFamily" Value="Meiryo UI"/>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Margin" Value="2,0,0,0"/>
                    <Setter Property="FontSize" Value="16"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Border x:Name="ItemParentBorder"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Margin="{TemplateBinding Margin}"
                                        Height="{TemplateBinding Height}"
                                        CornerRadius="5,5,0,0">
                                    <Border.InputBindings>
                                        <MouseBinding MouseAction="LeftDoubleClick"
                                                      Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1,AncestorType=local:NoteView}, Path=DataContext.EditNoteCategoryNameCommand}"
                                                      CommandParameter="{Binding}"/>
                                    </Border.InputBindings>

                                    <Grid Margin="5,0,5,0">
                                        <TextBlock x:Name="DisplayTextBlock"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Foreground="{TemplateBinding Foreground}"
                                                   FontSize="{TemplateBinding FontSize}"
                                                   Text="{Binding CategoryName}"
                                                   FontFamily="{TemplateBinding FontFamily}"
                                                   Visibility="{Binding IsEdit, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource ReverseBoolToVisibilityConverter}}"/>

                                        <TextBox x:Name="EditTextBox"
                                                 MinWidth="100"
                                                 VerticalContentAlignment="Center"
                                                 FontSize="{TemplateBinding FontSize}"
                                                 Visibility="{Binding IsEdit, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                                 BorderThickness="1"
                                                 mah:ValidationHelper.CloseOnMouseLeftButtonDown="True"
                                                 mah:ValidationHelper.ShowValidationErrorOnMouseOver="True"
                                                 GotFocus="EditTextBox_GotFocus"
                                                 LostFocus="EditTextBox_LostFocus"
                                                 IsVisibleChanged="EditTextBox_IsVisibleChanged"
                                                 KeyUp="EditTextBox_KeyUp"
                                                 Loaded="EditTextBox_Loaded">
                                            <TextBox.Text>
                                                <Binding Path="CategoryName" UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <validationrules:NoteCategoryNameValidationRule/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                    </Grid>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="DisplayTextBlock" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                                        <Setter TargetName="DisplayTextBlock" Property="FontWeight" Value="Bold"/>
                                        <Setter TargetName="DisplayTextBlock" Property="FontSize" Value="24"/>
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True"/>
                                            <Condition Property="IsSelected" Value="False"/>
                                        </MultiTrigger.Conditions>

                                        <Setter TargetName="DisplayTextBlock" Property="Foreground" Value="Black"/>
                                    </MultiTrigger>


                                </ControlTemplate.Triggers>
                            </ControlTemplate>

                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.ItemContainerStyle>
            
            <!--<TabControl.ItemTemplate>
                <DataTemplate DataType="NoteCategoryUiModel">
                    <TextBlock Text="{Binding CategoryName}"
                               FontSize="22"/>
                </DataTemplate>
            </TabControl.ItemTemplate>-->

            <TabControl.ContentTemplate>
                <DataTemplate DataType="NoteCategoryUiModel">
                    <Border Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
                            Margin="0,0,0,0"
                            BorderThickness="0,1,0,0"
                            BorderBrush="Gray">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <WrapPanel Grid.Row="0"
                                       VerticalAlignment="Center">
                                <iconPacks:PackIconModern Margin="5,0,5,0"
                                                          Kind="Question"
                                                          VerticalAlignment="Center">
                                    <iconPacks:PackIconModern.ToolTip>
                                        <ToolTip controlzex:ToolTipAssist.AutoMove="True">
                                            <ToolTip.Template>
                                                <ControlTemplate>
                                                    <Grid>
                                                        <Border Background="White"
                                                                BorderBrush="Black"
                                                                BorderThickness="1"
                                                                Opacity="0.9"
                                                                SnapsToDevicePixels="True" />
                                                        <StackPanel Orientation="Vertical">
                                                            <TextBlock Margin="2"
                                                                       FontSize="16"
                                                                       Foreground="Black"
                                                                       Text=" Click 'SAVE' button or press 'Ctrl+S' can save the content! "
                                                                       TextOptions.TextFormattingMode="Display"
                                                                       TextOptions.TextRenderingMode="ClearType" />
                                                        </StackPanel>
                                                    </Grid>
                                                </ControlTemplate>
                                            </ToolTip.Template>
                                        </ToolTip>
                                    </iconPacks:PackIconModern.ToolTip>
                                </iconPacks:PackIconModern>

                                <TextBlock Text="You can click 'SAVE' button or press 'Ctrl+S' to save the content!"
                                           Foreground="{DynamicResource MahApps.Brushes.Gray4}"
                                           FontSize="14"/>
                            </WrapPanel>

                            <RichTextBox x:Name="NoteContentRichTextBox"
                                         Grid.Row="1"
                                         Margin="2,2,2,0"
                                         BorderThickness="2"
                                         BorderBrush="LightGray"
                                         AcceptsReturn="True"
                                         FontSize="16"
                                         IsEnabled="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1,AncestorType=local:NoteView}, Path=DataContext.IsTextBoxEnable.Value}"
                                         KeyUp="NoteContentRichTextBox_KeyUp"
                                         PreviewKeyDown="NoteContentRichTextBox_PreviewKeyDown"
                                         VerticalScrollBarVisibility="Auto"
                                         HorizontalScrollBarVisibility="Disabled"
                                         LostFocus="NoteContentRichTextBox_LostFocus"
                                         SelectionChanged="NoteContentRichTextBox_SelectionChanged"
                                         PreviewMouseLeftButtonUp="NoteContentRichTextBox_PreviewMouseLeftButtonUp"
                                         helpers:RichTextBoxHelper.DocumentXaml="{Binding Content}"
                                         helpers:RichTextBoxHelper.LocalImagePath="{x:Static data:GlobalData.IMAGE_PATH}">
                                <!--<RichTextBox.InputBindings>
                                    <KeyBinding Key="S" Modifiers="Ctrl"
                                                Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1,AncestorType=local:NoteView}, Path=DataContext.CtrlSCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=RichTextBox}}"/>
                                    <KeyBinding Key="V" Modifiers="Ctrl"
                                                Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1,AncestorType=local:NoteView}, Path=DataContext.CtrlVCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=RichTextBox}}"/>
                                </RichTextBox.InputBindings>-->
                            </RichTextBox>
                        </Grid>
                    </Border>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>

        <Border Grid.Row="2" Grid.Column="0"
                BorderBrush="Gray"
                BorderThickness="0,0,1,0">
            <ListView x:Name="NoteTypeListView"
                      Margin="0,0,-1,0"
                      BorderThickness="0"
                      HorizontalAlignment="Right"
                      Style="{StaticResource Note.Type.ListView.Style}"
                      ItemsSource="{Binding NoteTypeCollection}"
                      SelectedItem="{Binding SelectedNoteType.Value}"/>
        </Border>


        <WrapPanel Margin="0,0,3,0" Grid.Row="1" Grid.Column="2"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center">
            <Button Grid.Row="1" Grid.Column="2"
                    Padding="0,0,0,0"
                    Width="30"
                    Height="30"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    FontSize="15"
                    Content="✚"
                    Command="{Binding AddNoteCategoryCommand}">
                <Button.ToolTip>
                    <ToolTip controlzex:ToolTipAssist.AutoMove="True">
                        <ToolTip.Template>
                            <ControlTemplate>
                                <Grid>
                                    <Border Background="White"
                                            BorderBrush="Black"
                                            BorderThickness="1"
                                            Opacity="0.9"
                                            SnapsToDevicePixels="True" />
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Margin="2"
                                                   FontSize="16"
                                                   Foreground="Black"
                                                   Text=" You can click this button to add a category of note. "
                                                   TextOptions.TextFormattingMode="Display"
                                                   TextOptions.TextRenderingMode="ClearType" />
                                    </StackPanel>
                                </Grid>
                            </ControlTemplate>
                        </ToolTip.Template>
                    </ToolTip>
                </Button.ToolTip>
            </Button>
        </WrapPanel>

        <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3">
            <Button x:Name="ConfigypeButton"
                    Height="40"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Left"
                    FontSize="16"
                    Content="Config"
                    Command="{Binding ConfigTypeCommand}"/>
            
            <Button x:Name="SearchButton"
                    Width="150"
                    Height="40"
                    Margin="0,0,100,0"
                    HorizontalAlignment="Right"
                    FontSize="16"
                    Content="Search Detail"
                    Command="{Binding SearchContentCommand}"/>
            
            <Button x:Name="SaveButton"
                    Width="80"
                    Height="40"
                    Margin="0,0,10,0"
                    HorizontalAlignment="Right"
                    FontSize="16"
                    Content="save"
                    Command="{Binding SaveContentCommand}"/>
        </Grid>

        <Popup x:Name="RichTextBoxColorPickerPopup"
               IsOpen="False"
               AllowsTransparency="True"
               PopupAnimation="Fade"
               StaysOpen="True"
               Placement="MousePoint"
               VerticalOffset="12"
               Opened="RichTextBoxColorPickerPopup_Opened">
            <Grid Width="400"
                  Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Border Grid.Row="0"
                        BorderThickness="1,1,1,0"
                        BorderBrush="{DynamicResource MahApps.Brushes.Accent}">
                    <WrapPanel Grid.Row="0" Margin="0,3,0,3">
                        <RadioButton x:Name="FontColorRadioButton"
                                     Margin="5,0,0,0"
                                     GroupName="ColorGroup"
                                     IsChecked="True"
                                     Content="Font"/>
                        <RadioButton x:Name="BackgroundColorRadioButton"
                                     Margin="5,0,3,0"
                                     GroupName="ColorGroup"
                                     Content="Background"/>

                        <CheckBox x:Name="PopupBoldCheckbox"
                                  Margin="3,0,0,0"
                                  Width="30"
                                  Height="30"
                                  FontSize="14"
                                  FontWeight="Bold"
                                  Content="B"
                                  Checked="BoldCheckBox_Checked"
                                  Unchecked="BoldCheckBox_Unchecked"
                                  Template="{StaticResource Checkbox.Template}"/>

                        <CheckBox x:Name="PopupItalicCheckbox"
                                  Margin="3,0,0,0"
                                  Width="30"
                                  Height="30"
                                  FontSize="14"
                                  FontStyle="Italic"
                                  Content="I"
                                  Checked="ItelicCheckBox_Checked"
                                  Unchecked="ItelicCheckBox_Unchecked"
                                  Template="{StaticResource Checkbox.Template}"/>

                        <ComboBox x:Name="PopupFontSizeComboBox"
                                  Margin="3,0,0,0"
                                  Padding="5,-1,0,0"
                                  Width="62" Height="30"
                                  FontSize="{Binding RelativeSource={RelativeSource Mode=Self}, Path=SelectedItem.Content}"
                                  VerticalAlignment="Center"
                                  SelectionChanged="ComboBox_SelectionChanged">
                            <ComboBoxItem Content="12" FontSize="12"/>
                            <ComboBoxItem Content="14" FontSize="14"/>
                            <ComboBoxItem Content="16" FontSize="16"/>
                            <ComboBoxItem Content="18" FontSize="18"/>
                            <ComboBoxItem Content="20" FontSize="20"/>
                            <ComboBoxItem Content="22" FontSize="22"/>
                        </ComboBox>

                        <Button x:Name="ClearStyleButton"
                                Margin="3,0,0,0"
                                Content="Clear"
                                Click="ClearStyleButton_Click"/>
                    </WrapPanel>
                </Border>

                <Button x:Name="RichTextBoxColorPickerPopupCloseButton"
                        Margin="0,0,0,0" Height="30"
                        Content="✖"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Click="RichTextBoxColorPickerPopupCloseButton_Click"/>

                <mah:ColorPalette x:Name="PopupColorPalette"
                                  Grid.Row="1"
                                  Header="Content Palette" 
                                  ItemsSource="{x:Static mah:BuildInColorPalettes.WpfColorsPalette}"
                                  SelectionChanged="ColorPalette_SelectionChanged"/>
            </Grid>
        </Popup>
    </Grid>
</UserControl>
