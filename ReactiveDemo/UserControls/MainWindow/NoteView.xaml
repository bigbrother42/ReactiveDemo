<UserControl x:Class="ReactiveDemo.UserControls.MainWindow.NoteView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ReactiveDemo.UserControls.MainWindow"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:controlzex="urn:controlzex"
             xmlns:converters="clr-namespace:InfrastructureDemo.Converters;assembly=InfrastructureDemo"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:interactionRequest="http://www.codeplex.com/prism"
             xmlns:actionBase="clr-namespace:ReactiveDemo.Base.ActionBase;assembly=InfrastructureDemo"
             xmlns:behaviors="clr-namespace:MahApps.Metro.Behaviors;assembly=MahApps.Metro"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:validationrules="clr-namespace:InfrastructureDemo.ValidationRules;assembly=InfrastructureDemo"
             xmlns:helpers="clr-namespace:BaseDemo.Helpers.Component;assembly=BaseDemo"
             xmlns:actionBase1="clr-namespace:ReactiveDemo.ActionBase;assembly=InfrastructureDemo"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             mc:Ignorable="d" 
             d:DesignHeight="450"
             d:DesignWidth="800">

    <i:Interaction.Triggers>
        <interactionRequest:InteractionRequestTrigger SourceObject="{Binding AddNoteCategoryRequest}">
            <actionBase:InvokeMethodAction MethodName="AddNoteCategory" />
        </interactionRequest:InteractionRequestTrigger>

        <interactionRequest:InteractionRequestTrigger SourceObject="{Binding ConfigTypeViewRequest}">
            <actionBase1:AlertWindowAction
                Owner="{Binding ElementName=MainWindowView}"
                WindowName="ReactiveDemo.Views.MainWindow.ConfigNoteTypeView" />
        </interactionRequest:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <UserControl.Resources>
        <ResourceDictionary>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <converters:ReverseBoolToVisibilityConverter x:Key="ReverseBoolToVisibilityConverter" />

            <ContextMenu x:Key="CategoryContextMenu">
                <MenuItem Header="delete"
                          Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1,AncestorType=local:NoteView}, Path=DataContext.DeleteNoteCategoryCommand}"
                          CommandParameter="{Binding}"/>
                <MenuItem Header="edit name"
                          Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1,AncestorType=local:NoteView}, Path=DataContext.EditNoteCategoryNameCommand}"
                          CommandParameter="{Binding}"/>
            </ContextMenu>

            <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0,0,0,0"/>
                <Setter Property="BorderBrush" Value="LightGray"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray4}"/>
                <Setter Property="FontFamily" Value="Meiryo UI"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="Margin" Value="2,0,0,0"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="ContextMenu" Value="{StaticResource CategoryContextMenu}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border x:Name="ItemParentBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Margin="{TemplateBinding Margin}"
                                    Height="{TemplateBinding Height}"
                                    CornerRadius="5,5,0,0">
                                <Grid Margin="5,0,5,0">
                                    <TextBlock x:Name="DisplayTextBlock"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Foreground="{TemplateBinding Foreground}"
                                               FontSize="{TemplateBinding FontSize}"
                                               Text="{Binding CategoryName}"
                                               FontFamily="{TemplateBinding FontFamily}"
                                               Visibility="{Binding IsEdit, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource ReverseBoolToVisibilityConverter}}"/>

                                    <TextBox x:Name="EditTextBox"
                                             VerticalContentAlignment="Center"
                                             FontSize="{TemplateBinding FontSize}"
                                             Visibility="{Binding IsEdit, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                             BorderThickness="1"
                                             mah:ValidationHelper.CloseOnMouseLeftButtonDown="True"
                                             mah:ValidationHelper.ShowValidationErrorOnMouseOver="True"
                                             GotFocus="EditTextBox_GotFocus"
                                             LostFocus="EditTextBox_LostFocus"
                                             IsVisibleChanged="EditTextBox_IsVisibleChanged"
                                             KeyUp="EditTextBox_KeyUp"
                                             Loaded="EditTextBox_Loaded">
                                        <TextBox.Text>
                                            <Binding Path="CategoryName" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <validationrules:NoteCategoryNameValidationRule/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="DisplayTextBlock" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                                    <Setter TargetName="DisplayTextBlock" Property="FontWeight" Value="Bold"/>
                                    <Setter TargetName="DisplayTextBlock" Property="FontSize" Value="20"/>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <!--<Setter TargetName="DisplayTextBlock" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent3}"/>
                                    <Setter TargetName="DisplayTextBlock" Property="FontWeight" Value="Bold"/>
                                    <Setter TargetName="DisplayTextBlock" Property="FontSize" Value="18"/>-->
                                    <Setter TargetName="DisplayTextBlock" Property="Foreground" Value="Black"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Note.Category.ListView.Style" TargetType="{x:Type ListView}">
                <Style.Resources>
                    <Style BasedOn="{StaticResource ListViewItemStyle}" TargetType="{x:Type ListViewItem}" />
                </Style.Resources>
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource ListViewItemStyle}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <ScrollViewer Template="{DynamicResource MahApps.Templates.ScrollViewer.AnimatedSingleRow}"
                                          HorizontalScrollBarVisibility="Auto"
                                          VerticalScrollBarVisibility="Disabled">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <WrapPanel IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Note.Type.ListViewItem.Style" TargetType="{x:Type ListViewItem}">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1,1,0,1"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray4}"/>
                <Setter Property="FontFamily" Value="Meiryo UI"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Margin" Value="0,0,0,3"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Width" Value="90"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border x:Name="ItemParentBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    Height="{TemplateBinding Height}"
                                    Width="{TemplateBinding Width}"
                                    CornerRadius="5,0,0,5">
                                <TextBlock x:Name="DisplayTextBlock"
                                           Padding="5,8,0,0"
                                           Height="{TemplateBinding Height}"
                                           Width="{TemplateBinding Width}"
                                           VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                           HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontSize="{TemplateBinding FontSize}"
                                           Text="{Binding TypeName}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           ToolTip="{Binding TypeName}"
                                           TextWrapping="NoWrap"
                                           TextTrimming="CharacterEllipsis"/>

                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="DisplayTextBlock" Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                                    <Setter TargetName="DisplayTextBlock" Property="FontWeight" Value="Bold"/>
                                    <Setter TargetName="DisplayTextBlock" Property="FontSize" Value="18"/>
                                    <Setter TargetName="DisplayTextBlock" Property="Padding" Value="5,8,0,0"/>
                                    <Setter TargetName="ItemParentBorder" Property="BorderThickness" Value="2,2,0,2"/>
                                    <Setter TargetName="ItemParentBorder" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>

                                    <Setter TargetName="DisplayTextBlock" Property="Foreground" Value="Black"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Note.Type.ListView.Style" TargetType="{x:Type ListView}">
                <Style.Resources>
                    <Style BasedOn="{StaticResource ListViewItemStyle}" TargetType="{x:Type ListViewItem}" />
                </Style.Resources>
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource Note.Type.ListViewItem.Style}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <ScrollViewer Template="{DynamicResource MahApps.Templates.ScrollViewer.AnimatedSingleRow}"
                                          HorizontalScrollBarVisibility="Disabled"
                                          VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical" IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="45"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="*" MaxWidth="1100"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <WrapPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"
                   VerticalAlignment="Center">
            <TextBlock Margin="10,0,0,0"
                       Text="Color: "
                       FontSize="16"
                       VerticalAlignment="Center"/>

            <mah:ColorPicker Width="220" Height="40"
                             Margin="10,2,0,0"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Center"
                             mah:TextBoxHelper.ClearTextButton="True"
                             mah:TextBoxHelper.UseFloatingWatermark="True"
                             mah:TextBoxHelper.Watermark="Select a color"
                             AddToRecentColorsTrigger="SelectedColorChanged"
                             SelectedColorChanged="ColorPicker_SelectedColorChanged"/>

            <TextBlock Margin="10,0,0,0"
                       Text="Font Size: "
                       FontSize="16"
                       VerticalAlignment="Center"/>

            <ComboBox Width="60" Height="40"
                      Margin="10,1,0,0"
                      FontSize="{Binding RelativeSource={RelativeSource Mode=Self}, Path=SelectedItem.Content}"
                      VerticalAlignment="Center"
                      SelectionChanged="ComboBox_SelectionChanged">
                <ComboBoxItem Content="12" FontSize="12"/>
                <ComboBoxItem Content="14" FontSize="14"/>
                <ComboBoxItem Content="16" FontSize="16"/>
                <ComboBoxItem Content="18" FontSize="18"/>
                <ComboBoxItem Content="20" FontSize="20"/>
                <ComboBoxItem Content="22" FontSize="22"/>
            </ComboBox>

        </WrapPanel>

        <ListView x:Name="NoteCategoryListView" Grid.Row="1" Grid.Column="1"
                  BorderThickness="0"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource Note.Category.ListView.Style}"
                  ItemsSource="{Binding SelectedNoteType.Value.CategoryList}"
                  SelectedItem="{Binding SelectedNoteCategory.Value}"
                  SelectionChanged="NoteCategoryListView_SelectionChanged"
                  dd:DragDrop.IsDragSource="True"
                  dd:DragDrop.IsDropTarget="True"
                  dd:DragDrop.DropHandler="{Binding}"/>

        <Border Grid.Row="2" Grid.Column="0"
                BorderBrush="Gray"
                BorderThickness="0,0,1,0">
            <ListView x:Name="NoteTypeListView"
                      Margin="0,0,-1,0"
                      BorderThickness="0"
                      HorizontalAlignment="Right"
                      Style="{StaticResource Note.Type.ListView.Style}"
                      ItemsSource="{Binding NoteTypeCollection}"
                      SelectedItem="{Binding SelectedNoteType.Value}"/>
        </Border>


        <WrapPanel Margin="10,10,10,0" Grid.Row="1" Grid.Column="2">
            <Button Grid.Row="1" Grid.Column="2"
                    Padding="0,0,0,0"
                    Width="30"
                    Height="30"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    FontSize="15"
                    Content="✚"
                    Command="{Binding AddNoteCategoryCommand}">
                <Button.ToolTip>
                    <ToolTip controlzex:ToolTipAssist.AutoMove="True">
                        <ToolTip.Template>
                            <ControlTemplate>
                                <Grid>
                                    <Border Background="White"
                                            BorderBrush="Black"
                                            BorderThickness="1"
                                            Opacity="0.9"
                                            SnapsToDevicePixels="True" />
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Margin="2"
                                                   FontSize="16"
                                                   Foreground="Black"
                                                   Text=" You can click this button to add a category of note. "
                                                   TextOptions.TextFormattingMode="Display"
                                                   TextOptions.TextRenderingMode="ClearType" />
                                    </StackPanel>
                                </Grid>
                            </ControlTemplate>
                        </ToolTip.Template>
                    </ToolTip>
                </Button.ToolTip>
            </Button>
        </WrapPanel>

        <Border Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"
                Margin="0,0,0,0"
                BorderThickness="0,1,0,0"
                BorderBrush="Gray">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <WrapPanel Grid.Row="0"
                           VerticalAlignment="Center">
                    <iconPacks:PackIconModern Margin="5,0,5,0"
                                              Kind="Question"
                                              VerticalAlignment="Center">
                        <iconPacks:PackIconModern.ToolTip>
                            <ToolTip controlzex:ToolTipAssist.AutoMove="True">
                                <ToolTip.Template>
                                    <ControlTemplate>
                                        <Grid>
                                            <Border Background="White"
                                            BorderBrush="Black"
                                            BorderThickness="1"
                                            Opacity="0.9"
                                            SnapsToDevicePixels="True" />
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock Margin="2"
                                                   FontSize="16"
                                                   Foreground="Black"
                                                   Text=" Click 'SAVE' button or press 'Ctrl+S' can save the content! "
                                                   TextOptions.TextFormattingMode="Display"
                                                   TextOptions.TextRenderingMode="ClearType" />
                                            </StackPanel>
                                        </Grid>
                                    </ControlTemplate>
                                </ToolTip.Template>
                            </ToolTip>
                        </iconPacks:PackIconModern.ToolTip>
                    </iconPacks:PackIconModern>

                    <TextBlock Text="You can click 'SAVE' button or press 'Ctrl+S' to save the content!"
                               Foreground="{DynamicResource MahApps.Brushes.Gray4}"
                               FontSize="14"/>
                </WrapPanel>
                
                <RichTextBox x:Name="NoteContentRichTextBox"
                             Grid.Row="1"
                             Margin="2,2,2,0"
                             BorderThickness="2"
                             BorderBrush="LightGray"
                             AcceptsReturn="True"
                             FontSize="16"
                             KeyUp="NoteContentRichTextBox_KeyUp"
                             VerticalScrollBarVisibility="Auto"
                             HorizontalScrollBarVisibility="Disabled"
                             helpers:RichTextBoxHelper.DocumentXaml="{Binding SelectedNoteCategory.Value.Content}"/>
            </Grid>
        </Border>

        <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3">
            <Button x:Name="ConfigypeButton"
                    Height="40"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Left"
                    FontSize="16"
                    Content="Config"
                    Command="{Binding ConfigTypeCommand}"/>
            
            <Button x:Name="SearchButton"
                    Width="80"
                    Height="40"
                    Margin="0,0,100,0"
                    HorizontalAlignment="Right"
                    FontSize="16"
                    Content="Search"
                    Command="{Binding SearchContentCommand}"/>
            
            <Button x:Name="SaveButton"
                    Width="80"
                    Height="40"
                    Margin="0,0,10,0"
                    HorizontalAlignment="Right"
                    FontSize="16"
                    Content="save"
                    Command="{Binding SaveContentCommand}"/>
        </Grid>
    </Grid>
</UserControl>
