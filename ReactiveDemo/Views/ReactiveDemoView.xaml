<mah:MetroWindow x:Class="ReactiveDemo.Views.ReactiveDemoView"
             x:Name="ReactiveDemoWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mvvm="http://prismlibrary.com/"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:actionBase="clr-namespace:ReactiveDemo.ActionBase;assembly=InfrastructureDemo"
             xmlns:interactionRequest="http://www.codeplex.com/prism"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:component="clr-namespace:ReactiveDemo.Component"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:buttonbehavior="clr-namespace:ReactiveDemo.Behavior.ButtonBehavior"
             xmlns:actionBase11="clr-namespace:ReactiveDemo.Base.ActionBase;assembly=InfrastructureDemo"
             mvvm:ViewModelLocator.AutoWireViewModel="True"
             WindowStartupLocation="CenterScreen"
             Title="ReactiveDemo"
             Height="450"
             Width="800">

    <i:Interaction.Triggers>
        <interactionRequest:InteractionRequestTrigger SourceObject="{Binding LoginOpenPageRequest}">
            <actionBase:AlertWindowAction
                Owner="{Binding ElementName=ReactiveDemoWindow}"
                WindowName="ReactiveDemo.Views.Window1View" />
        </interactionRequest:InteractionRequestTrigger>

        <interactionRequest:InteractionRequestTrigger SourceObject="{Binding ButtonGroupDragDropRequest}">
            <actionBase:AlertWindowAction
                Owner="{Binding ElementName=ReactiveDemoWindow}"
                WindowName="ReactiveDemo.Views.Component.ButtonGroupDragDropView" />
        </interactionRequest:InteractionRequestTrigger>

        <interactionRequest:InteractionRequestTrigger SourceObject="{Binding TestMethodRequest}">
            <actionBase11:InvokeMethodAction MethodName="TestMethod" />
        </interactionRequest:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <Grid Margin="20,20,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <WrapPanel Grid.Row="0">
            <Button Width="100" Height="20"
                    Content="{Binding Button1Name.Value}"
                    Command="{Binding OpenWindow1Command}"/>

            <Button Width="100" Height="20"
                    Content="ReactiveX-Zip"
                    Command="{Binding ReactiveXZipCommand}"/>

            <Button Width="100" Height="20"
                    Content="ReactiveX-Sample"
                    Command="{Binding ReactiveXSampleCommand}"/>

            <Button Width="100" Height="20"
                    Content="ReactiveX-Merge"
                    Command="{Binding ReactiveXMergeCommand}"/>
        </WrapPanel>

        <WrapPanel Grid.Row="1" Margin="0,20,0,0">
            <Button Height="30"
                    Content="Button_Group_DragDrop_Demo"
                    Command="{Binding ButtonGroupDragDropCommand}"/>
        </WrapPanel>

        <WrapPanel Grid.Row="2" Margin="0,20,0,0">
            <component:CustomerButton Width="150" Height="30"
                                      HorizontalAlignment="Left"
                                      HorizontalContentAlignment="Center"
                                      Content="TestCustomerButton"/>

            <Image Width="300" Height="150"
                   Source="{StaticResource TestImage}"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"/>
        </WrapPanel>

        <WrapPanel Grid.Row="3" Margin="0,20,0,0">
            <Button Width="150" Height="30"
                    Content="TestMethodRequest"
                    Command="{Binding TestMethodRequestCommand}"/>

            <Button Width="150" Height="30"
                    Content="TestMapper"
                    Command="{Binding TestMapperCommand}"/>
        </WrapPanel>

        <WrapPanel Grid.Row="4" Margin="0,20,0,0">
            <component:CustomerButton Width="150" Height="30"
                                      Background="Red"
                                      HorizontalAlignment="Left"
                                      HorizontalContentAlignment="Center"
                                      Content="TestBehaviorButton">
                <i:Interaction.Behaviors>
                    <buttonbehavior:TestButtonBehavior/>
                </i:Interaction.Behaviors>
            </component:CustomerButton>
        </WrapPanel>
    </Grid>
</mah:MetroWindow>
